function RTdat = importRTfile(filename, filenum, inputStruct, startRow, endRow)
%IMPORTFILE Import numeric data from a text file as column vectors.
%   [TRIAL,STRUCT1H2F,FIELD0F1L2R,PRBANG,PRBPOSCMR,FLOW1RAD2LAM,RESPONSE] =
%   IMPORTFILE(FILENAME) Reads data from text file FILENAME for the default
%   selection.
%
%   [TRIAL,STRUCT1H2F,FIELD0F1L2R,PRBANG,PRBPOSCMR,FLOW1RAD2LAM,RESPONSE] =
%   IMPORTFILE(FILENAME, STARTROW, ENDROW) Reads data from rows STARTROW
%   through ENDROW of text file FILENAME.
%
% Example:
%   [RTdat] = importfile('FP_RT_000_sess1.txt',5, 112);
%
%    See also TEXTSCAN.
%
% Auto-generated by MATLAB on 2018/06/28 08:31:12
%
% Editted by L.E.
% Function to import relative tilt data file and convert to array RTdat


%% Initialize variables.
if nargin<=2
    startRow = 5;
    endRow = inf;
end

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
%	column6: double (%f)
%   column7: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%20f%20f%20f%20f%20f%20f%f%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
textscan(fileID, '%[^\n\r]', startRow(1)-1, 'WhiteSpace', '', 'ReturnOnError', false);
dataArray = textscan(fileID, formatSpec, endRow(1)-startRow(1)+1, 'Delimiter', '', 'WhiteSpace', '', 'TextType', 'string', 'ReturnOnError', false, 'EndOfLine', '\r\n');
for block=2:length(startRow)
    frewind(fileID);
    textscan(fileID, '%[^\n\r]', startRow(block)-1, 'WhiteSpace', '', 'ReturnOnError', false);
    dataArrayBlock = textscan(fileID, formatSpec, endRow(block)-startRow(block)+1, 'Delimiter', '', 'WhiteSpace', '', 'TextType', 'string', 'ReturnOnError', false, 'EndOfLine', '\r\n');
    for col=1:length(dataArray)
        dataArray{col} = [dataArray{col};dataArrayBlock{col}];
    end
end


%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
RTdat = inputStruct;
if filenum == 1
    RTdat(startRow-4:endRow-4,1) = dataArray{1,1};
    RTdat(startRow-4:endRow-4,2) = dataArray{1,2};
    RTdat(startRow-4:endRow-4,3) = dataArray{1,3};
    RTdat(startRow-4:endRow-4,4) = dataArray{1,4};
    RTdat(startRow-4:endRow-4,5) = dataArray{1,5};
    RTdat(startRow-4:endRow-4,6) = dataArray{1,6};
    %RTdat(startRow-4:endRow-4,7) = dataArray{1,7};
else
    RTdat(endRow-3:(endRow-4)+(endRow-4),1) = dataArray{1,1};
    RTdat(endRow-3:(endRow-4)+(endRow-4),2) = dataArray{1,2};
    RTdat(endRow-3:(endRow-4)+(endRow-4),3) = dataArray{1,3};
    RTdat(endRow-3:(endRow-4)+(endRow-4),4) = dataArray{1,4};
    RTdat(endRow-3:(endRow-4)+(endRow-4),5) = dataArray{1,5};
    RTdat(endRow-3:(endRow-4)+(endRow-4),6) = dataArray{1,6};
    %RTdat(endRow-3:(endRow-4)+(endRow-4),7) = dataArray{1,7};
end


